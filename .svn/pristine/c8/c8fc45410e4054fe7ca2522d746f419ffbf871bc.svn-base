SyntecRemoteWeb.controller('cncDiagnosis',['$scope','$http', '$interval','$timeout', function SyntecRemote($scope,$http,$interval,$timeout){

	$interval(function(){
		
		if( $scope.diagnosisCmd['isGettingData'] == true ){
			return;
		}

		//get data from db
		GetDiagnosisData();
	},2000);

	$scope.curtDiagUnit = "R_Bit";
	$scope.diagUnits = {
		R_Bit		: { "name":"R 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
		I_Bit		: { "name":"I 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
		O_Bit		: { "name":"O 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
		C_Bit		: { "name":"C 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
		S_Bit		: { "name":"S 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
		A_Bit		: { "name":"A 值", "bgColor":"#ffffff", "fontColor":"#FF6800" },
	};

	$scope.diagnosisData = [
		{"no":19,"value":10},
		{"no":85,"value":110},
		{"no":31,"value":-120},
		{"no":56,"value":-520},
		{"no":97,"value":10},
		{"no":40,"value":0},
		{"no":43,"value":1},
	];
	$scope.diagnosisCmd = {
		uniID			: "",
		Command			: "Read_R",
		Start			: 0,
		End				: 99,
		isGettingData	: false,
		UpdateTime		: "",
	};


	$scope.setDiagParam = function( unitKey )
	{
		chosedColor = { "bg":"#FF6800", "font":"#ffffff" };
		tabClick( $scope.diagUnits, unitKey, chosedColor);
		$scope.curtDiagUnit = unitKey;

		switch( unitKey ){
			case "R_Bit":
				DefaultCommand("Read_R");
			break;
			case "I_Bit":
				//DefaultCommand("Read_I");
			break;
			case "O_Bit":
				//DefaultCommand("Read_O");
			break;
			case "C_Bit":
				//DefaultCommand("Read_C");
			break;
			case "S_Bit":
				//DefaultCommand("Read_S");
			break;
			case "A_Bit":
				//DefaultCommand("Read_A");
			break;
			default:
			break;
		}

		//$scope.Command();
	}
 	DefaultCommand = function( szCommand )
 	{
 		var tmpCiagnosisCmd = {
			uniID			: "",
			Command			: szCommand,
			Start			: 0,
			End				: 99,
			isGettingData	: false,
			UpdateTime		: "",
		};

		$scope.diagnosisCmd = tmpCiagnosisCmd;
		$scope.diagnosisData = [];
 	}
	$scope.ShowTitle = function( nColumnIndex, nRowIndex )
	{
		if( nColumnIndex == -1 ){
			return ( (nRowIndex) < 0 ) ? "-" : (nRowIndex);
		}

		if( nRowIndex == -1 ){
			return ( (nColumnIndex) < 0 ) ? "-" : (nColumnIndex);
		}
	}
	$scope.TitleStyle = function( nColumnIndex, nRowIndex )
	{
		if( nRowIndex == -1 ){
			return {'background':"#FF6800", "width":"100%", "color":"#000"};
		}

		if( nColumnIndex == -1 ){
			return {'background':"#FF6800", "width":"100%", "color":"#000"};
		}
	}
	$scope.MappingDiagData = function( nTens, nDigits )
	{
		if( $scope.diagnosisData.length == 0 ){
			return;
		}

		if( nTens == -1 || nDigits == -1 ){
			return;
		}

		var nNo = nTens + nDigits;
		for( var i=0; i<$scope.diagnosisData.length; i++ ){
			if( $scope.diagnosisData[i].no == nNo ){
				return $scope.diagnosisData[i].value;
			}
		}
	}
	$scope.MappingStyle = function( nTens, nDigits )
	{
		if( $scope.diagnosisData.length == 0 ){
			return;
		}

		if( nTens == -1 || nDigits == -1 ){
			return;
		}

		var nNo = nTens + nDigits;
		if( $scope.nDiagNo == nNo ){
			//console.log($scope.nDiagNo);
			return {'background':'#FF4A51'};
		}
	}
	$scope.ShowDiagTens = function()
	{
		var aryTens = [ "-1" ]; // default
		var ten = Math.round($scope.diagnosisCmd['End']/100)-1;
		ten = ten*100;
		for( var i=0; i<10; i++ ){
			var index = ten + (i*10);
			aryTens.push(index);
		}

		return aryTens;
	}
	$scope.PreDiagNo = function()
	{
		$scope.diagnosisCmd['Start'] = $scope.diagnosisCmd['Start'] - 100;
		$scope.diagnosisCmd['End'] = $scope.diagnosisCmd['End'] - 100;
		$scope.Command();
	}
	$scope.NextDiagNo = function()
	{
		$scope.diagnosisCmd['Start'] = $scope.diagnosisCmd['Start'] + 100;
		$scope.diagnosisCmd['End'] = $scope.diagnosisCmd['End'] + 100;
		$scope.Command()
	}
	$scope.FindSpecificNo = function()
	{
		if( $scope.nDiagNo == "" ){
			return;
		}

		if( $scope.nDiagNo == null ){
			return;
		}

		try {
			//show red color
			var nTens = Math.floor(parseInt($scope.nDiagNo)/10);
			nTens = nTens *10;
			var nDigits = $scope.nDiagNo - nTens;
			$scope.MappingStyle(nTens,nDigits);


			var number = Math.floor(parseInt($scope.nDiagNo)/100);
			var newStart = (number*100);

			if( newStart == $scope.diagnosisCmd['Start'] ){
				return;
			}

			$scope.diagnosisCmd['Start'] = (number*100);
			$scope.diagnosisCmd['End'] = (number*100) + 99;
			$scope.Command();
		}
		catch(err) {
			return;
		}
	}



	$scope.Command = function()
	{
		var param = [];
		param.push($scope.diagnosisCmd['Start']);
		param.push($scope.diagnosisCmd['End']);

		var commandObj = {"method":"DiagnosisCommand", "cncID":$scope.cncID, "command":$scope.diagnosisCmd['Command'], "param":param };
        //console.log(commandObj);
		$http({
			method:'POST',
			url:'server/CommandAjax.php',
			data: $.param(commandObj),
			headers: {'Content-type': 'application/x-www-form-urlencoded'},
		}).
		success(function(json){
			//console.log( json );
			if( json.result == "error" ){
				//console.log( json );
			}

			$scope.diagnosisCmd['uniID'] = json.data.uniID;
			$scope.diagnosisCmd['isGettingData'] = false;

		}).
		error(function(json){
			console.warn(json);
		});
	}
	GetDiagnosisData = function()
	{
		//no uni id, cannot get data
		if( $scope.diagnosisCmd['uniID'] == "" ){
			return;
		}

		$scope.diagnosisCmd['isGettingData'] = true;

		var commandObj = {"method":"UpdatingDiagnosisData", "cncID":$scope.cncID, "commandParam":$scope.diagnosisCmd };
        //console.log(commandObj);
		$http({
			method:'POST',
			url:'server/CommandAjax.php',
			data: $.param(commandObj),
			headers: {'Content-type': 'application/x-www-form-urlencoded'},
		}).
		success(function(json){
			//console.log( json );
			if( json.result == "error" ){
				//console.log( json );
			}
			MappingDataFromDB(json.data);
		}).
		error(function(json){
			console.warn(json);
		});
	}
	MappingDataFromDB = function( diagnosisData )
	{
		if( diagnosisData.length == 0 ){
			return;
		}

		$scope.diagnosisData = [];

		var lastUpdatingTime = new Date(diagnosisData[0]['agent_time']);

		for(var i=0; i<diagnosisData.length; i++ ){
			
			var update_time = new Date(diagnosisData[i]['agent_time']);
			if( update_time - lastUpdatingTime > 0 ){
				lastUpdatingTime = update_time;
			}

			var diagObj = {"no":diagnosisData[i]['no'], "value":diagnosisData[i]['value']};
			$scope.diagnosisData.push(diagObj);
		}

		$scope.diagnosisCmd['UpdateTime'] = changeDateToTime(lastUpdatingTime);
		$scope.diagnosisCmd['isGettingData'] = false;
	}


}]);